spring.application.name=MangaService
server.port=8081
server.address=0.0.0.0

# Database configuration
spring.datasource.url=jdbc:postgresql://localhost:5435/manga_db?useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=manga_user
spring.datasource.password=manga_password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.connection.CharSet=utf8
                <a class="nav-link" href="/parser">
                    <i class="fas fa-download"></i> ?????? MangaLib
                </a>
spring.jpa.properties.hibernate.connection.characterEncoding=utf8
spring.jpa.properties.hibernate.connection.useUnicode=true

# Connection pool settings (improved for large manga processing)
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000

# File upload configuration (increased for large manga)
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=1GB

# HTTP client configuration for large manga processing
spring.web.client.read-timeout=300000
spring.web.client.connect-timeout=60000

# Server configuration for large requests
server.tomcat.max-http-post-size=1073741824
server.tomcat.connection-timeout=300000
server.tomcat.max-connections=200
server.tomcat.threads.max=200
server.tomcat.accept-count=100

# JPA batch processing for better performance
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# MinIO configuration
minio.endpoint=http://localhost:9000
minio.access-key=minioadmin
minio.secret-key=minioadmin
minio.bucket-name=manga-images

# Other services URLs
# MelonService integration
melon.service.url=http://melon-service:8084
melon.service.public.url=http://localhost:8084
chapter.service.url=http://chapter-service:8082
image.storage.service.url=http://image-storage-service:8083

# Services configuration
services.auth-service-url=http://auth-service:8085
services.chapter-service-url=http://chapter-service:8082
services.image-storage-service-url=http://image-storage-service:8083
services.melon-service-url=http://melon-service:8084
services.melon-service-public-url=http://localhost:8084
