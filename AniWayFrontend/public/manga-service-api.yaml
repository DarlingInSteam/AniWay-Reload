openapi: 3.0.3
info:
  title: AniWay MangaService API
  description: |
    API для управления каталогом манги в системе AniWay.

    ## Архитектура
    MangaService является центральным сервисом для управления каталогом манги.
    Все запросы к MangaService должны идти через Gateway Service на порт 8080.
    В production окружении используйте домен вашего сервера вместо localhost.

    ## Основные возможности
    - **Управление каталогом манги** - создание, обновление, удаление манги
    - **Поиск и фильтрация** - поиск по названию, автору, жанру, статусу
    - **Интеграция с парсерами** - автоматический импорт манги из внешних источников
    - **Прокси изображений** - временная функциональность для проксирования изображений
    - **Веб-интерфейс** - административный интерфейс для управления мангой

    ## Взаимодействие с другими сервисами
    - **ChapterService** - управление главами манги
    - **ImageStorageService** - хранение изображений
    - **MelonService** - парсинг манги из внешних источников

    ## Типы манги
    - **MANGA** - японская манга
    - **MANHWA** - корейская манхва
    - **MANHUA** - китайская маньхуа
    - **COMIC** - западные комиксы
    - **OTHER** - другие типы

    ## Статусы манги
    - **ONGOING** - выходит
    - **COMPLETED** - завершена
    - **HIATUS** - приостановлена
    - **CANCELLED** - отменена
  version: 1.0.0
  contact:
    name: AniWay Development Team
    email: support@aniway.com

servers:
  - url: http://localhost:8080
    description: Gateway Service (Локальная разработка)
  - url: https://your-domain.com:8080
    description: Gateway Service (Production)

tags:
  - name: Управление мангой
    description: CRUD операции с мангой
  - name: Поиск
    description: Поиск и фильтрация манги
  - name: Парсер
    description: Интеграция с внешними парсерами
  - name: Прогресс
    description: Отслеживание прогресса задач
  - name: Прокси изображений
    description: Временная функциональность проксирования изображений
  - name: Веб-интерфейс
    description: Административный веб-интерфейс

paths:
  /api/manga:
    get:
      tags:
        - Управление мангой
      summary: Получить все манги
      description: Возвращает список всех манг в системе с полной информацией
      responses:
        '200':
          description: Список манг получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MangaResponseDTO'
        '500':
          description: Ошибка сервера

    post:
      tags:
        - Управление мангой
      summary: Создать новую мангу
      description: Создает новую мангу в системе
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MangaCreateDTO'
            example:
              title: "One Piece"
              description: "Пираты, сокровища, приключения"
              author: "Eiichiro Oda"
              artist: "Eiichiro Oda"
              releaseDate: "1997-07-22"
              status: "ONGOING"
              genre: "Adventure, Shounen"
              coverImageUrl: "https://example.com/cover.jpg"
      responses:
        '201':
          description: Манга создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MangaResponseDTO'
        '400':
          description: Ошибка валидации данных
        '500':
          description: Ошибка сервера

  /api/manga/search:
    get:
      tags:
        - Поиск
      summary: Поиск манги
      description: Поиск манги по различным критериям
      parameters:
        - name: title
          in: query
          schema:
            type: string
          description: Название манги (частичное совпадение)
        - name: author
          in: query
          schema:
            type: string
          description: Автор манги (частичное совпадение)
        - name: genre
          in: query
          schema:
            type: string
          description: Жанр манги (частичное совпадение)
        - name: status
          in: query
          schema:
            type: string
            enum: [ONGOING, COMPLETED, HIATUS, CANCELLED]
          description: Статус манги (точное совпадение)
      responses:
        '200':
          description: Результаты поиска
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MangaResponseDTO'
        '500':
          description: Ошибка сервера

  /api/manga/{id}:
    get:
      tags:
        - Управление мангой
      summary: Получить мангу по ID
      description: Возвращает информацию о конкретной манге
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID манги
      responses:
        '200':
          description: Манга найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MangaResponseDTO'
        '404':
          description: Манга не найдена
        '500':
          description: Ошибка сервера

    put:
      tags:
        - Управление мангой
      summary: Обновить мангу
      description: Обновляет информацию о существующей манге
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID манги
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MangaCreateDTO'
      responses:
        '200':
          description: Манга обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MangaResponseDTO'
        '404':
          description: Манга не найдена
        '400':
          description: Ошибка валидации данных
        '500':
          description: Ошибка сервера

    delete:
      tags:
        - Управление мангой
      summary: Удалить мангу
      description: Удаляет мангу из системы
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID манги
      responses:
        '204':
          description: Манга удалена
        '404':
          description: Манга не найдена
        '500':
          description: Ошибка сервера

  /api/manga/{id}/cover:
    put:
      tags:
        - Управление мангой
      summary: Обновить обложку манги
      description: Обновляет URL изображения обложки манги
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID манги
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              format: uri
            example: "https://example.com/new-cover.jpg"
      responses:
        '200':
          description: Обложка обновлена
        '404':
          description: Манга не найдена
        '500':
          description: Ошибка сервера

  /api/manga/{id}/chapters:
    get:
      tags:
        - Управление мангой
      summary: Получить главы манги
      description: Возвращает список всех глав для указанной манги
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID манги
      responses:
        '200':
          description: Список глав получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChapterDTO'
        '404':
          description: Манга не найдена
        '500':
          description: Ошибка сервера

  /api/images/chapter/{chapterId}:
    get:
      tags:
        - Прокси изображений
      summary: Получить изображения главы
      description: Возвращает список изображений для указанной главы (временная функциональность)
      parameters:
        - name: chapterId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID главы
      responses:
        '200':
          description: Список изображений получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChapterImageDTO'
        '500':
          description: Ошибка сервера

  /api/images/proxy/{imageKey}:
    get:
      tags:
        - Прокси изображений
      summary: Проксирование изображения
      description: Возвращает изображение по ключу через прокси (временная функциональность)
      parameters:
        - name: imageKey
          in: path
          required: true
          schema:
            type: string
          description: Ключ изображения в хранилище
      responses:
        '200':
          description: Изображение получено
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
        '404':
          description: Изображение не найдено
        '500':
          description: Ошибка сервера

  /parser/start:
    post:
      tags:
        - Парсер
      summary: Запустить парсинг манги
      description: Запускает процесс парсинга манги по slug
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - slug
              properties:
                slug:
                  type: string
                  description: Slug манги для парсинга
      responses:
        '200':
          description: Парсинг запущен
          content:
            application/json:
              schema:
                type: object
                properties:
                  taskId:
                    type: string
                    description: ID задачи парсинга
                  status:
                    type: string
                    description: Статус задачи
        '400':
          description: Ошибка запуска парсинга
        '500':
          description: Ошибка сервера

  /parser/batch-start:
    post:
      tags:
        - Парсер
      summary: Запустить пакетный парсинг
      description: Запускает парсинг нескольких манг одновременно
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - slugs
              properties:
                slugs:
                  type: array
                  items:
                    type: string
                  description: Список slug'ов для парсинга
                autoImport:
                  type: boolean
                  default: true
                  description: Автоматический импорт после парсинга
                parser:
                  type: string
                  default: "mangalib"
                  description: Тип парсера
      responses:
        '200':
          description: Пакетный парсинг запущен
          content:
            application/json:
              schema:
                type: object
                properties:
                  taskId:
                    type: string
                    description: ID задачи парсинга
                  status:
                    type: string
                    description: Статус задачи
        '400':
          description: Ошибка запуска парсинга
        '500':
          description: Ошибка сервера

  /parser/status/{taskId}:
    get:
      tags:
        - Парсер
      summary: Получить статус парсинга
      description: Возвращает текущий статус задачи парсинга
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
          description: ID задачи парсинга
      responses:
        '200':
          description: Статус получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  taskId:
                    type: string
                  status:
                    type: string
                    enum: [PENDING, RUNNING, COMPLETED, FAILED]
                  progress:
                    type: integer
                    minimum: 0
                    maximum: 100
                  message:
                    type: string
                  error:
                    type: string
        '400':
          description: Ошибка получения статуса
        '500':
          description: Ошибка сервера

  /parser/build:
    post:
      tags:
        - Парсер
      summary: Построить архив манги
      description: Создает архив из распарсенной манги
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - filename
              properties:
                filename:
                  type: string
                  description: Имя файла для архива
                branchId:
                  type: string
                  description: ID ветки (опционально)
      responses:
        '200':
          description: Архив построен
          content:
            application/json:
              schema:
                type: object
                properties:
                  filename:
                    type: string
                  status:
                    type: string
        '400':
          description: Ошибка построения архива
        '500':
          description: Ошибка сервера

  /parser/list:
    get:
      tags:
        - Парсер
      summary: Список распарсенных манг
      description: Возвращает список всех распарсенных манг
      responses:
        '200':
          description: Список получен
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    filename:
                      type: string
                    title:
                      type: string
                    status:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
        '500':
          description: Ошибка сервера

  /api/parser/progress/{taskId}:
    post:
      tags:
        - Прогресс
      summary: Обновить прогресс задачи
      description: Обновляет прогресс выполнения задачи парсинга
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
          description: ID задачи
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [PENDING, RUNNING, COMPLETED, FAILED]
                  description: Статус задачи
                progress:
                  type: integer
                  minimum: 0
                  maximum: 100
                  description: Процент выполнения
                message:
                  type: string
                  description: Сообщение о прогрессе
                error:
                  type: string
                  description: Сообщение об ошибке
      responses:
        '200':
          description: Прогресс обновлен
        '400':
          description: Ошибка валидации данных
        '500':
          description: Ошибка сервера

  /manga:
    get:
      tags:
        - Веб-интерфейс
      summary: Каталог манги
      description: Отображает веб-страницу с каталогом всех манг
      responses:
        '200':
          description: Страница каталога
          content:
            text/html:
              schema:
                type: string

  /manga/{id}:
    get:
      tags:
        - Веб-интерфейс
      summary: Страница манги
      description: Отображает детальную страницу манги с главами
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID манги
      responses:
        '200':
          description: Страница манги
          content:
            text/html:
              schema:
                type: string
        '302':
          description: Перенаправление на каталог (манга не найдена)

  /manga/create:
    get:
      tags:
        - Веб-интерфейс
      summary: Форма создания манги
      description: Отображает форму для создания новой манги
      responses:
        '200':
          description: Форма создания
          content:
            text/html:
              schema:
                type: string

    post:
      tags:
        - Веб-интерфейс
      summary: Создать мангу через веб-интерфейс
      description: Создает новую мангу через веб-форму
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MangaCreateDTO'
      responses:
        '302':
          description: Перенаправление на созданную мангу
        '400':
          description: Ошибка валидации формы

  /chapters/create:
    get:
      tags:
        - Веб-интерфейс
      summary: Форма создания главы
      description: Отображает форму для создания новой главы
      parameters:
        - name: mangaId
          in: query
          required: true
          schema:
            type: integer
            format: int64
          description: ID манги
      responses:
        '200':
          description: Форма создания главы
          content:
            text/html:
              schema:
                type: string

    post:
      tags:
        - Веб-интерфейс
      summary: Создать главу через веб-интерфейс
      description: Создает новую главу с загрузкой изображений через веб-форму
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                mangaId:
                  type: integer
                  format: int64
                  description: ID манги
                chapterNumber:
                  type: integer
                  description: Номер главы
                title:
                  type: string
                  description: Название главы
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Файлы изображений
                startPage:
                  type: integer
                  default: 1
                  description: Начальная страница
      responses:
        '302':
          description: Перенаправление на мангу
        '400':
          description: Ошибка валидации формы

  /reader/{chapterId}:
    get:
      tags:
        - Веб-интерфейс
      summary: Читалка манги
      description: Отображает страницу для чтения главы манги
      parameters:
        - name: chapterId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID главы
      responses:
        '200':
          description: Страница читалки
          content:
            text/html:
              schema:
                type: string
        '302':
          description: Перенаправление на каталог (глава не найдена)

  /parser:
    get:
      tags:
        - Веб-интерфейс
      summary: Страница парсера
      description: Отображает административную страницу парсера
      responses:
        '200':
          description: Страница парсера
          content:
            text/html:
              schema:
                type: string

components:
  schemas:
    MangaResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID манги
        title:
          type: string
          description: Название манги
        description:
          type: string
          description: Описание манги
        author:
          type: string
          description: Автор манги
        artist:
          type: string
          description: Художник манги
        releaseDate:
          type: string
          format: date
          description: Дата выхода
        status:
          type: string
          enum: [ONGOING, COMPLETED, HIATUS, CANCELLED]
          description: Статус манги
        genre:
          type: string
          description: Жанры манги
        tags:
          type: string
          description: Теги манги
        engName:
          type: string
          description: Английское название
        alternativeNames:
          type: string
          description: Альтернативные названия
        type:
          type: string
          enum: [MANGA, MANHWA, MANHUA, COMIC, OTHER]
          description: Тип манги
        ageLimit:
          type: integer
          description: Возрастное ограничение
        isLicensed:
          type: boolean
          description: Лицензирована ли манга
        coverImageUrl:
          type: string
          format: uri
          description: URL обложки
        totalChapters:
          type: integer
          description: Общее количество глав
        createdAt:
          type: string
          format: date-time
          description: Дата создания
        updatedAt:
          type: string
          format: date-time
          description: Дата последнего обновления

    MangaCreateDTO:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          maxLength: 255
          description: Название манги
        description:
          type: string
          description: Описание манги
        author:
          type: string
          maxLength: 255
          description: Автор манги
        artist:
          type: string
          maxLength: 255
          description: Художник манги
        releaseDate:
          type: string
          format: date
          description: Дата выхода
        status:
          type: string
          enum: [ONGOING, COMPLETED, HIATUS, CANCELLED]
          description: Статус манги
        genre:
          type: string
          maxLength: 500
          description: Жанры манги
        coverImageUrl:
          type: string
          format: uri
          maxLength: 500
          description: URL обложки

    ChapterDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID главы
        mangaId:
          type: integer
          format: int64
          description: ID манги
        chapterNumber:
          type: integer
          description: Номер главы
        title:
          type: string
          description: Название главы
        pageCount:
          type: integer
          description: Количество страниц
        createdAt:
          type: string
          format: date-time
          description: Дата создания
        updatedAt:
          type: string
          format: date-time
          description: Дата обновления

    ChapterImageDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID изображения
        chapterId:
          type: integer
          format: int64
          description: ID главы
        pageNumber:
          type: integer
          description: Номер страницы
        imageUrl:
          type: string
          format: uri
          description: URL изображения
        imageKey:
          type: string
          description: Ключ изображения в хранилище
        createdAt:
          type: string
          format: date-time
          description: Дата создания

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Сообщение об ошибке
        status:
          type: integer
          description: HTTP статус код
        timestamp:
          type: string
          format: date-time
          description: Время ошибки
