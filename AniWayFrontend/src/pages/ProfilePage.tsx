import React, { useState } from 'react'
import { useAuth } from '../contexts/AuthContext'
import { useBookmarkStats } from '../hooks/useBookmarks'
import { useReadingStats } from '../hooks/useProgress'
import { useQuery } from '@tanstack/react-query'
import { bookmarkService } from '../services/bookmarkService'
import { User } from '../types'
import { Camera, Edit3, Settings, Trophy, Star, Clock, Users, MessageCircle, Book, TrendingUp } from 'lucide-react'

export const ProfilePage: React.FC = () => {
  const { user, updateProfile, isAdmin, isTranslator } = useAuth()
  const { stats: bookmarkStats, loading: bookmarkLoading } = useBookmarkStats()
  const { stats: readingStats, loading: readingLoading } = useReadingStats()
  
  const [isEditing, setIsEditing] = useState(false)
  const [editData, setEditData] = useState<Partial<User>>({})
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState<string | null>(null)

  // –ü–æ–ª—É—á–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –∑–∞–∫–ª–∞–¥–∫–∏
  const { data: favoriteBookmarks } = useQuery({
    queryKey: ['favorites'],
    queryFn: () => bookmarkService.getFavoriteBookmarks(),
    enabled: !!user
  })

  if (!user) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-manga-black">
        <div className="text-center">
          <h2 className="text-2xl font-bold text-white mb-4">
            –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
          </h2>
          <a href="/login" className="text-primary hover:text-primary/80">
            –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
          </a>
        </div>
      </div>
    )
  }

  const handleEdit = () => {
    setIsEditing(true)
    setEditData({
      bio: user.bio || '',
      profilePicture: user.profilePicture || ''
    })
    setError(null)
  }

  const handleCancel = () => {
    setIsEditing(false)
    setEditData({})
    setError(null)
  }

  const handleSave = async () => {
    setLoading(true)
    setError(null)

    try {
      await updateProfile(editData)
      setIsEditing(false)
      setEditData({})
    } catch (err) {
      setError(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è')
    } finally {
      setLoading(false)
    }
  }

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    setEditData(prev => ({
      ...prev,
      [e.target.name]: e.target.value
    }))
  }

  const getRoleDisplayName = () => {
    if (isAdmin) return '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
    if (isTranslator) return '–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫'
    return '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
  }

  const getRoleBadgeColor = () => {
    if (isAdmin) return 'bg-red-500/20 text-red-400 border-red-500/30'
    if (isTranslator) return 'bg-purple-500/20 text-purple-400 border-purple-500/30'
    return 'bg-primary/20 text-primary border-primary/30'
  }

  // –ú–æ–∫ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –¥–∏–∑–∞–π–Ω–∞
  const mockReadingHistory = [
    { date: '01 —Å–µ–Ω—Ç—è–±—Ä—è 2025', chapter: 274, manga: '–ù–∞–Ω–æ–º–∞—à–∏–Ω—ã' },
    { date: '31 –∞–≤–≥—É—Å—Ç–∞ 2025', chapter: 89, manga: '–°–æ–ª–æ –ª–µ–≤–µ–ª–∏–Ω–≥' },
    { date: '30 –∞–≤–≥—É—Å—Ç–∞ 2025', chapter: 156, manga: '–ë–∞—à–Ω—è –ë–æ–≥–∞' },
    { date: '29 –∞–≤–≥—É—Å—Ç–∞ 2025', chapter: 45, manga: '–ß–µ—Ä–Ω–æ–±—ã–ª—å—Å–∫–∞—è –∑–æ–Ω–∞' },
    { date: '28 –∞–≤–≥—É—Å—Ç–∞ 2025', chapter: 112, manga: '–ú–∞—Å—Ç–µ—Ä –∫–ª–∏–Ω–∫–∞ –¥–µ–º–æ–Ω–æ–≤' }
  ]

  const mockAchievements = [
    { icon: 'üìö', title: '–ö–Ω–∏–≥–æ–ª—é–±', description: '–ü—Ä–æ—á–∏—Ç–∞—Ç—å 100 –≥–ª–∞–≤' },
    { icon: 'üèÜ', title: '–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä', description: '–î–æ–±–∞–≤–∏—Ç—å 50 –º–∞–Ω–≥ –≤ –∑–∞–∫–ª–∞–¥–∫–∏' },
    { icon: '‚≠ê', title: '–ö—Ä–∏—Ç–∏–∫', description: '–û—Å—Ç–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π –æ—Ç–∑—ã–≤' },
    { icon: 'üî•', title: '–ú–∞—Ä–∞—Ñ–æ–Ω–µ—Ü', description: '–ß–∏—Ç–∞—Ç—å 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥' }
  ]

  const userLevel = Math.floor((readingStats?.totalChaptersRead || 0) / 50) + 1
  const levelProgress = ((readingStats?.totalChaptersRead || 0) % 50) / 50 * 100

  return (
    <div className="min-h-screen bg-manga-black">
      {/* –û–±–ª–æ–∂–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è */}
      <div className="relative h-80 bg-gradient-to-br from-primary/60 via-purple-600/40 to-pink-600/40 overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-t from-manga-black/80 via-transparent to-transparent" />
        
        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div className="absolute top-6 right-6 flex space-x-3">
          <button className="p-3 bg-white/10 backdrop-blur-sm rounded-full text-white hover:bg-white/20 transition-colors">
            <Camera className="w-5 h-5" />
          </button>
          <button 
            onClick={isEditing ? handleCancel : handleEdit}
            className="p-3 bg-white/10 backdrop-blur-sm rounded-full text-white hover:bg-white/20 transition-colors"
          >
            {isEditing ? <Settings className="w-5 h-5" /> : <Edit3 className="w-5 h-5" />}
          </button>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
        <div className="absolute bottom-8 left-8 flex items-end space-x-6">
          <div className="relative">
            <div className="w-32 h-32 rounded-2xl bg-white/10 backdrop-blur-sm border-4 border-white/20 overflow-hidden">
              {user.avatar || user.profilePicture ? (
                <img 
                  src={user.avatar || user.profilePicture} 
                  alt={user.username}
                  className="w-full h-full object-cover"
                />
              ) : (
                <div className="w-full h-full flex items-center justify-center">
                  <span className="text-4xl font-bold text-white">
                    {user.username.charAt(0).toUpperCase()}
                  </span>
                </div>
              )}
            </div>
            <div className="absolute -bottom-2 -right-2 p-2 bg-green-500 rounded-full border-4 border-manga-black">
              <div className="w-3 h-3 bg-white rounded-full" />
            </div>
          </div>
          
          <div className="text-white pb-4">
            <h1 className="text-4xl font-bold mb-2">{user.displayName || user.username}</h1>
            <p className="text-white/80 mb-3">{user.email}</p>
            <div className="flex items-center space-x-4">
              <span className={`px-4 py-2 rounded-full text-sm font-medium border ${getRoleBadgeColor()}`}>
                {getRoleDisplayName()}
              </span>
              <span className="text-white/60 text-sm">
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {(() => {
                  const dateStr = user.createdAt || user.registrationDate;
                  return dateStr ? new Date(dateStr).toLocaleDateString('ru-RU') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
                })()}
              </span>
            </div>
          </div>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="max-w-7xl mx-auto px-6 py-8">
        {error && (
          <div className="mb-6 p-4 bg-red-500/10 border border-red-500/30 rounded-xl">
            <p className="text-red-400 text-sm">{error}</p>
          </div>
        )}

        {/* –°–µ—Ç–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */}
        <div className="grid grid-cols-12 gap-8">
          {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ */}
          <div className="col-span-12 lg:col-span-4 space-y-8">
            {/* –£—Ä–æ–≤–µ–Ω—å */}
            <div className="bg-card rounded-2xl border border-border/30 p-6">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-xl font-bold text-white flex items-center">
                  <TrendingUp className="w-5 h-5 mr-2 text-primary" />
                  –£—Ä–æ–≤–µ–Ω—å
                </h3>
                <span className="text-3xl font-bold text-primary">#{userLevel}</span>
              </div>
              
              <div className="space-y-4">
                <div>
                  <div className="flex justify-between text-sm mb-2">
                    <span className="text-muted-foreground">–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                    <span className="text-white">{Math.floor(levelProgress)}%</span>
                  </div>
                  <div className="w-full bg-white/10 rounded-full h-3">
                    <div 
                      className="bg-gradient-to-r from-primary to-purple-500 h-3 rounded-full transition-all duration-300"
                      style={{ width: `${levelProgress}%` }}
                    />
                  </div>
                </div>
                
                <div className="text-center">
                  <p className="text-muted-foreground text-sm">
                    {50 - ((readingStats?.totalChaptersRead || 0) % 50)} –≥–ª–∞–≤ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
                  </p>
                </div>
              </div>
            </div>

            {/* –ò—Å—Ç–æ—Ä–∏—è —á—Ç–µ–Ω–∏—è */}
            <div className="bg-card rounded-2xl border border-border/30 p-6">
              <h3 className="text-xl font-bold text-white mb-6 flex items-center">
                <Clock className="w-5 h-5 mr-2 text-primary" />
                –ò—Å—Ç–æ—Ä–∏—è —á—Ç–µ–Ω–∏—è
              </h3>
              
              <div className="space-y-4">
                {mockReadingHistory.map((item, index) => (
                  <div key={index} className="border-l-2 border-primary/30 pl-4 pb-4 last:pb-0">
                    <div className="text-sm text-muted-foreground mb-1">{item.date}</div>
                    <div className="text-white">
                      –ü—Ä–æ—á–∏—Ç–∞–Ω–∞ <span className="text-primary font-medium">{item.chapter} –≥–ª–∞–≤–∞</span>, –º–∞–Ω–≥–∏{' '}
                      <span className="text-white font-medium">{item.manga}</span>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ */}
          <div className="col-span-12 lg:col-span-8 space-y-8">
            {/* –ò–∑–±—Ä–∞–Ω–Ω—ã–µ –∑–∞–∫–ª–∞–¥–∫–∏ */}
            <div className="bg-card rounded-2xl border border-border/30 p-6">
              <h3 className="text-xl font-bold text-white mb-6 flex items-center">
                <Star className="w-5 h-5 mr-2 text-primary" />
                –ò–∑–±—Ä–∞–Ω–Ω–æ–µ
              </h3>
              
              {favoriteBookmarks && favoriteBookmarks.length > 0 ? (
                <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
                  {favoriteBookmarks.slice(0, 8).map((bookmark: any) => (
                    <div key={bookmark.id} className="group cursor-pointer">
                      <div className="aspect-[3/4] bg-white/5 rounded-xl overflow-hidden mb-3 border border-border/20 group-hover:border-primary/40 transition-colors relative">
                        {(bookmark.mangaCoverUrl || bookmark.manga?.imageUrl) && (
                          <img 
                            src={bookmark.mangaCoverUrl || bookmark.manga?.imageUrl} 
                            alt={bookmark.mangaTitle || bookmark.manga?.title || 'Manga'}
                            className="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                          />
                        )}
                        {/* –ü—Ä–æ–≥—Ä–µ—Å—Å —á—Ç–µ–Ω–∏—è */}
                        {bookmark.currentChapter && bookmark.totalChapters && (
                          <div className="absolute bottom-0 left-0 right-0 bg-black/70 text-white text-xs p-2">
                            <div className="flex justify-between items-center">
                              <span>–ì–ª–∞–≤–∞ {bookmark.currentChapter}/{bookmark.totalChapters}</span>
                              <div className="w-16 bg-gray-700 rounded-full h-1">
                                <div 
                                  className="bg-primary h-1 rounded-full"
                                  style={{ 
                                    width: `${Math.min(100, (bookmark.currentChapter / bookmark.totalChapters) * 100)}%` 
                                  }}
                                />
                              </div>
                            </div>
                          </div>
                        )}
                      </div>
                      <h4 className="text-white text-sm font-medium truncate group-hover:text-primary transition-colors">
                        {bookmark.mangaTitle || bookmark.manga?.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}
                      </h4>
                    </div>
                  ))}
                </div>
              ) : (
                <div className="text-center py-12">
                  <Star className="w-16 h-16 text-muted-foreground mx-auto mb-4" />
                  <p className="text-muted-foreground">–ù–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –º–∞–Ω–≥</p>
                </div>
              )}
            </div>

            {/* –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
            <div className="bg-card rounded-2xl border border-border/30 p-6">
              <h3 className="text-xl font-bold text-white mb-6 flex items-center">
                <Trophy className="w-5 h-5 mr-2 text-primary" />
                –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
              </h3>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                {mockAchievements.map((achievement, index) => (
                  <div key={index} className="flex items-center space-x-4 p-4 bg-white/5 rounded-xl border border-border/20">
                    <div className="text-3xl">{achievement.icon}</div>
                    <div>
                      <h4 className="text-white font-medium">{achievement.title}</h4>
                      <p className="text-muted-foreground text-sm">{achievement.description}</p>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>

        {/* –û–±–æ –º–Ω–µ */}
        <div className="mt-8 bg-card rounded-2xl border border-border/30 p-6">
          <h3 className="text-xl font-bold text-white mb-6 flex items-center">
            <Book className="w-5 h-5 mr-2 text-primary" />
            –û–±–æ –º–Ω–µ
          </h3>
          
          {isEditing ? (
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-white mb-2">
                  –°—Å—ã–ª–∫–∞ –Ω–∞ –∞–≤–∞—Ç–∞—Ä
                </label>
                <input
                  type="url"
                  name="profilePicture"
                  value={editData.profilePicture || ''}
                  onChange={handleChange}
                  className="w-full px-4 py-3 bg-white/5 border border-border/30 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary/50 transition-colors"
                  placeholder="https://example.com/avatar.jpg"
                />
              </div>
              <div>
                <label className="block text-sm font-medium text-white mb-2">
                  –ë–∏–æ–≥—Ä–∞—Ñ–∏—è
                </label>
                <textarea
                  name="bio"
                  rows={4}
                  value={editData.bio || ''}
                  onChange={handleChange}
                  className="w-full px-4 py-3 bg-white/5 border border-border/30 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary/50 transition-colors resize-none"
                  placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ..."
                />
              </div>
              <div className="flex space-x-3">
                <button
                  onClick={handleSave}
                  disabled={loading}
                  className="px-6 py-3 bg-primary text-white rounded-xl hover:bg-primary/80 disabled:opacity-50 transition-colors"
                >
                  {loading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'}
                </button>
                <button
                  onClick={handleCancel}
                  className="px-6 py-3 bg-white/10 text-white rounded-xl hover:bg-white/20 transition-colors"
                >
                  –û—Ç–º–µ–Ω–∞
                </button>
              </div>
            </div>
          ) : (
            <p className="text-muted-foreground leading-relaxed">
              {user.bio || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ.'}
            </p>
          )}
        </div>

        {/* –î—Ä—É–∑—å—è */}
        <div className="mt-8 bg-card rounded-2xl border border-border/30 p-6">
          <h3 className="text-xl font-bold text-white mb-6 flex items-center">
            <Users className="w-5 h-5 mr-2 text-primary" />
            –î—Ä—É–∑—å—è
            <span className="ml-2 text-sm bg-primary/20 text-primary px-3 py-1 rounded-full">–°–∫–æ—Ä–æ</span>
          </h3>
          
          <div className="text-center py-12">
            <Users className="w-16 h-16 text-muted-foreground mx-auto mb-4" />
            <p className="text-muted-foreground">–§—É–Ω–∫—Ü–∏—è –¥—Ä—É–∑–µ–π –ø–æ—è–≤–∏—Ç—Å—è –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏</p>
          </div>
        </div>

        {/* –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ */}
        <div className="mt-8 bg-card rounded-2xl border border-border/30 p-6">
          <h3 className="text-xl font-bold text-white mb-6 flex items-center">
            <MessageCircle className="w-5 h-5 mr-2 text-primary" />
            –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
            <span className="ml-2 text-sm bg-primary/20 text-primary px-3 py-1 rounded-full">–°–∫–æ—Ä–æ</span>
          </h3>
          
          <div className="text-center py-12">
            <MessageCircle className="w-16 h-16 text-muted-foreground mx-auto mb-4" />
            <p className="text-muted-foreground">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø—Ä–æ—Ñ–∏–ª—é –ø–æ—è–≤—è—Ç—Å—è –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏</p>
          </div>
        </div>
      </div>
    </div>
  )
}
