#!/usr/bin/env python3
"""–¢–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ mangalib —Å –ø—Ä–æ–∫—Å–∏"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ MelonService
sys.path.insert(0, os.path.dirname(__file__))

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–æ–∫—Å–∏ –∏–∑ settings.json
import json
from pathlib import Path

settings_path = Path(__file__).parent / "Parsers" / "mangalib" / "settings.json"

print("=" * 60)
print("üß™ –¢–ï–°–¢ –ü–†–û–ö–°–ò –í –ü–ê–†–°–ï–†–ï MANGALIB")
print("=" * 60)

# –ó–∞–≥—Ä—É–∑–∫–∞ settings.json
with open(settings_path, 'r', encoding='utf-8') as f:
    settings = json.load(f)

proxy_config = settings.get("proxy", {})

print(f"\nüìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏ –≤ settings.json:")
print(f"   enable: {proxy_config.get('enable')}")
print(f"   host: {proxy_config.get('host')}")
print(f"   port: {proxy_config.get('port')} (type: {type(proxy_config.get('port')).__name__})")
print(f"   login: {proxy_config.get('login')}")
print(f"   password: {'***' if proxy_config.get('password') else 'empty'}")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ –ø–æ—Ä—Ç–∞
if isinstance(proxy_config.get('port'), str):
    print(f"\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: port —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π!")
    print(f"   –≠—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –≤ dublib.WebRequestor")
    print(f"   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ —á–∏—Å–ª–æ: \"port\": 8000")
elif isinstance(proxy_config.get('port'), int):
    print(f"\n‚úÖ –¢–∏–ø –ø–æ—Ä—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π (int)")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ enable
if not proxy_config.get('enable'):
    print(f"\n‚ùå –ü–†–û–ö–°–ò –û–¢–ö–õ–Æ–ß–ï–ù!")
    print(f"   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ \"enable\": true –≤ settings.json")
else:
    print(f"\n‚úÖ –ü—Ä–æ–∫—Å–∏ –≤–∫–ª—é—á–µ–Ω")

# –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä—Å–µ—Ä
print(f"\n" + "=" * 60)
print(f"üîß –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä—Å–µ—Ä...")
print("=" * 60)

try:
    # –ú–µ–Ω—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –Ω–∞ Parsers/mangalib
    os.chdir(os.path.join(os.path.dirname(__file__), "Parsers", "mangalib"))
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º main –ø–∞—Ä—Å–µ—Ä–∞
    from main import Parser
    
    print(f"‚úÖ –ü–∞—Ä—Å–µ—Ä –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç–æ–¥–∞ _InitializeRequestor
    if hasattr(Parser, '_InitializeRequestor'):
        print(f"‚úÖ –ú–µ—Ç–æ–¥ _InitializeRequestor –Ω–∞–π–¥–µ–Ω")
    else:
        print(f"‚ùå –ú–µ—Ç–æ–¥ _InitializeRequestor –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –ø–∞—Ä—Å–µ—Ä–∞: {e}")
    import traceback
    traceback.print_exc()

print(f"\n" + "=" * 60)
print(f"‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
print("=" * 60)

print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
print(f"   1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ port - —ç—Ç–æ —á–∏—Å–ª–æ (int), –∞ –Ω–µ —Å—Ç—Ä–æ–∫–∞")
print(f"   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ dublib.WebRequestor –∑–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–æ–∫—Å–∏")
print(f"   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–∞—Ä—Å–µ—Ä —Å --verbose –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏")
