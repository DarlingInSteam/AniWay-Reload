#!/usr/bin/env python3
"""–¢–µ—Å—Ç —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –ø—Ä–æ–∫—Å–∏ –¥–ª—è MangaLib API"""

import requests
import json
from pathlib import Path

def load_proxy_settings():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–∫—Å–∏ –∏–∑ settings.json"""
    settings_path = Path(__file__).parent / "Parsers" / "mangalib" / "settings.json"
    
    with open(settings_path, 'r', encoding='utf-8') as f:
        settings = json.load(f)
    
    proxy_config = settings.get("proxy", {})
    
    if not proxy_config.get("enable", False):
        print("‚ùå Proxy disabled in settings.json")
        return None
    
    host = proxy_config.get("host", "")
    port = proxy_config.get("port", "")
    login = proxy_config.get("login", "")
    password = proxy_config.get("password", "")
    
    if not host or not port:
        print("‚ùå Proxy host or port not configured")
        return None
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º URL –ø—Ä–æ–∫—Å–∏
    if login and password:
        proxy_url = f"http://{login}:{password}@{host}:{port}"
        print(f"‚úÖ Proxy configured: {login}:***@{host}:{port}")
    else:
        proxy_url = f"http://{host}:{port}"
        print(f"‚úÖ Proxy configured: {host}:{port}")
    
    return {
        'http': proxy_url,
        'https': proxy_url
    }

def test_proxy():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏"""
    print("=" * 60)
    print("üß™ –¢–ï–°–¢ –†–û–°–°–ò–ô–°–ö–û–ì–û –ü–†–û–ö–°–ò –î–õ–Ø MANGALIB API")
    print("=" * 60)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏
    proxy_settings = load_proxy_settings()
    
    if not proxy_settings:
        print("\n‚ùå –ü—Ä–æ–∫—Å–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        return
    
    print(f"\nüì¶ Proxy settings: {proxy_settings['http'][:20]}...")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ IP —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
    print("\n" + "=" * 60)
    print("üìç –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ IP –∞–¥—Ä–µ—Å–∞")
    print("=" * 60)
    
    try:
        response = requests.get(
            "https://api.ipify.org?format=json",
            proxies=proxy_settings,
            timeout=10
        )
        ip_data = response.json()
        print(f"‚úÖ IP —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏: {ip_data['ip']}")
        print(f"   (–î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–æ—Å—Å–∏–π—Å–∫–∏–π IP, –Ω–µ IP —Å–µ—Ä–≤–µ—Ä–∞)")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ IP: {e}")
        return
    
    # –¢–µ—Å—Ç 2: MangaLib API - –∫–∞—Ç–∞–ª–æ–≥
    print("\n" + "=" * 60)
    print("üìö –¢–ï–°–¢ 2: MangaLib API - –ö–∞—Ç–∞–ª–æ–≥ –º–∞–Ω–≥–∏")
    print("=" * 60)
    
    api_url = "https://api.cdnlibs.org/api/manga"
    params = {
        "fields[]": "rate_avg",
        "page": 1
    }
    headers = {
        "Site-Id": "1",  # mangalib
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",
        "Accept": "application/json, text/plain, */*",
        "Accept-Language": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7",
        "Origin": "https://mangalib.me",
        "Referer": "https://mangalib.me/manga-list",
    }
    
    try:
        print(f"üîÑ –ó–∞–ø—Ä–æ—Å: GET {api_url}")
        print(f"üåê –ß–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏: {proxy_settings['http'][:30]}...")
        
        response = requests.get(
            api_url,
            params=params,
            headers=headers,
            proxies=proxy_settings,
            timeout=30
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            manga_count = len(data.get('data', []))
            print(f"‚úÖ –£–°–ü–ï–•! –ü–æ–ª—É—á–µ–Ω–æ {manga_count} –º–∞–Ω–≥")
            
            if manga_count > 0:
                first_manga = data['data'][0]
                print(f"\nüìñ –ü–µ—Ä–≤–∞—è –º–∞–Ω–≥–∞:")
                print(f"   - ID: {first_manga.get('id')}")
                print(f"   - –ù–∞–∑–≤–∞–Ω–∏–µ: {first_manga.get('rus_name', first_manga.get('name'))}")
                print(f"   - –†–µ–π—Ç–∏–Ω–≥: {first_manga.get('rate_avg', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: HTTP {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text[:200]}")
            
    except requests.exceptions.ProxyError as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ü–†–û–ö–°–ò: {e}")
        print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   1. –ü—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        print("   2. –ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å")
        print("   3. –ü—Ä–æ–∫—Å–∏ —Ç—Ä–µ–±—É–µ—Ç –¥—Ä—É–≥–æ–π –ø—Ä–æ—Ç–æ–∫–æ–ª (HTTPS –≤–º–µ—Å—Ç–æ HTTP)")
    except requests.exceptions.Timeout:
        print(f"‚ùå –¢–ê–ô–ú–ê–£–¢: –ü—Ä–æ–∫—Å–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {type(e).__name__}: {e}")
    
    print("\n" + "=" * 60)
    print("‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
    print("=" * 60)

if __name__ == "__main__":
    test_proxy()
