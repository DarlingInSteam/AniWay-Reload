import requests
import json

PROXY = {
    'http': 'http://PS20z2:fFNHVg@168.80.1.136:8000',
    'https': 'http://PS20z2:fFNHVg@168.80.1.136:8000'
}

# –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º slug_url
slug_url = "7580--i-alone-level-up"  # –§–æ—Ä–º–∞—Ç –∏–∑ API –∫–∞—Ç–∞–ª–æ–≥–∞

api_url = f"https://api.lib.social/api/manga/{slug_url}?fields[]=summary&fields[]=genres&fields[]=tags&fields[]=teams&fields[]=authors&fields[]=publisher&fields[]=userBookmark&fields[]=manga_status_id&fields[]=status_id&fields[]=scanlate_status&fields[]=artists&fields[]=bookmarkButton"

headers = {
    "Site-Id": "1",  # 1 = mangalib
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "ru-RU,ru;q=0.9",
    "Origin": "https://mangalib.org",
    "Referer": f"https://mangalib.org/ru/manga/{slug_url}",
}

print(f"\n{'='*70}")
print(f"üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç–∞–π—Ç–ª–∞")
print(f"{'='*70}")
print(f"URL: {api_url}")
print(f"Slug: {slug_url}")
print()

try:
    response = requests.get(api_url, headers=headers, proxies=PROXY, timeout=30)
    
    print(f"‚úÖ Status: {response.status_code}")
    print(f"üìä Size: {len(response.content)} bytes")
    print()
    
    if response.status_code == 200:
        data = response.json()
        print(f"üìã Response structure: {list(data.keys())}")
        
        if 'data' in data:
            manga = data['data']
            print(f"\n‚úÖ –î–∞–Ω–Ω—ã–µ –º–∞–Ω–≥–∏ –ø–æ–ª—É—á–µ–Ω—ã!")
            print(f"   ID: {manga.get('id')}")
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {manga.get('name')}")
            print(f"   –†—É—Å—Å–∫–æ–µ: {manga.get('rus_name')}")
            print(f"   Slug: {manga.get('slug')}")
            print(f"   Slug URL: {manga.get('slug_url')}")
            print(f"   –¢–∏–ø: {manga.get('type', {}).get('label')}")
            print(f"   –°—Ç–∞—Ç—É—Å: {manga.get('status', {}).get('label')}")
            
            if 'branches' in manga:
                branches = manga['branches']
                print(f"   –í–µ—Ç–æ–∫: {len(branches)}")
                for branch in branches:
                    print(f"     - –í–µ—Ç–∫–∞ {branch.get('id')}: {branch.get('count_chapters')} –≥–ª–∞–≤")
            
            print(f"\n‚≠ê API –†–ê–ë–û–¢–ê–ï–¢! –ú–æ–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ API")
    else:
        print(f"‚ùå API returned {response.status_code}")
        print(f"Response: {response.text[:200]}")

except Exception as e:
    print(f"‚ùå Error: {e}")

print(f"\n{'='*70}")
print(f"üìå –í–´–í–û–î")
print(f"{'='*70}")
print(f"\nMangaLib –∏–∑–º–µ–Ω–∏–ª —Å—Ç—Ä—É–∫—Ç—É—Ä—É:")
print(f"  1. –î–æ–º–µ–Ω: .me ‚Üí .org")
print(f"  2. URL —Ñ–æ—Ä–º–∞—Ç: https://mangalib.org/ru/manga/{{ID}}--{{slug}}")
print(f"  3. API endpoint: https://api.lib.social/api/manga/{{slug_url}}")
print(f"  4. Slug —Ñ–æ—Ä–º–∞—Ç –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞: slug_url –≤–º–µ—Å—Ç–æ slug")
print(f"\nüîß –ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –ø–∞—Ä—Å–µ—Ä:")
print(f"  - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å slug_url –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ (7580--i-alone-level-up)")
print(f"  - –ò–∑–º–µ–Ω–∏—Ç—å –¥–æ–º–µ–Ω –Ω–∞ .org")
print(f"  - –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å /ru/manga/")
