#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ MangaLib
–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É —Å –Ω–æ–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º slug_url (ID--slug)
"""

import requests
import json

PROXY = {
    'http': 'http://PS20z2:fFNHVg@168.80.1.136:8000',
    'https': 'http://PS20z2:fFNHVg@168.80.1.136:8000'
}

def test_catalog_returns_slug_url():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–∞—Ç–∞–ª–æ–≥ —Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç slug_url"""
    
    api_url = "https://api.cdnlibs.org/api/manga?fields[]=rate_avg&fields[]=rate&fields[]=releaseDate&page=1"
    
    headers = {
        "Site-Id": "1",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36",
        "Accept": "application/json",
        "Origin": "https://mangalib.me",
        "Referer": "https://mangalib.me/manga-list",
    }
    
    print(f"\n{'='*60}")
    print(f"üß™ –¢–ï–°–¢ 1: API –∫–∞—Ç–∞–ª–æ–≥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç slug_url")
    print(f"{'='*60}\n")
    
    response = requests.get(api_url, headers=headers, proxies=PROXY, timeout=30)
    data = response.json()
    manga_list = data.get("data", [])
    
    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ç–∞–π—Ç–ª–æ–≤: {len(manga_list)}")
    print(f"\nüìã –ü–µ—Ä–≤—ã–µ 5 slug_url –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞:")
    
    for i, manga in enumerate(manga_list[:5], 1):
        slug_url = manga.get("slug_url")
        name = manga.get("rus_name", manga.get("name"))
        print(f"  {i}. {slug_url:45} | {name[:30]}")
    
    return [m.get("slug_url") for m in manga_list[:3]]


def test_api_with_slug_url(slug_url: str):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ API –ø—Ä–∏–Ω–∏–º–∞–µ—Ç slug_url —Ñ–æ—Ä–º–∞—Ç"""
    
    api_url = f"https://api.cdnlibs.org/api/manga/{slug_url}"
    
    headers = {
        "Site-Id": "1",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36",
        "Accept": "application/json",
        "Origin": "https://mangalib.me",
        "Referer": f"https://mangalib.me/ru/manga/{slug_url}",
    }
    
    print(f"\n  üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {slug_url}")
    print(f"     API: {api_url}")
    
    try:
        response = requests.get(api_url, headers=headers, proxies=PROXY, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            title_data = data.get("data", {})
            name = title_data.get("rus_name", title_data.get("name"))
            chapters_count = title_data.get("chapters_count", 0)
            
            print(f"     ‚úÖ Status: {response.status_code}")
            print(f"     üìö –ù–∞–∑–≤–∞–Ω–∏–µ: {name}")
            print(f"     üìñ –ì–ª–∞–≤: {chapters_count}")
            return True
        else:
            print(f"     ‚ùå Status: {response.status_code}")
            print(f"     üìÑ Response: {response.text[:100]}")
            return False
    except Exception as e:
        print(f"     ‚ùå –û—à–∏–±–∫–∞: {str(e)[:80]}")
        return False


def test_web_with_slug_url(slug_url: str):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ WEB —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Å slug_url"""
    
    url = f"https://mangalib.me/ru/manga/{slug_url}"
    
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36",
        "Accept": "text/html",
    }
    
    print(f"     WEB: {url}")
    
    try:
        response = requests.get(url, headers=headers, proxies=PROXY, timeout=10)
        has_data = '__DATA__' in response.text or 'window.__DATA__' in response.text
        
        status_icon = "‚úÖ" if response.status_code == 200 else "‚ùå"
        print(f"     {status_icon} Status: {response.status_code}, Has data: {has_data}")
        
        return response.status_code == 200
    except Exception as e:
        print(f"     ‚ùå –û—à–∏–±–∫–∞: {str(e)[:80]}")
        return False


if __name__ == "__main__":
    print("\n" + "="*60)
    print("üß™ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢: MANGALIB –° –ù–û–í–´–ú –§–û–†–ú–ê–¢–û–ú")
    print("="*60)
    
    # –¢–µ—Å—Ç 1: –ö–∞—Ç–∞–ª–æ–≥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç slug_url
    slug_urls = test_catalog_returns_slug_url()
    
    # –¢–µ—Å—Ç 2: API –ø—Ä–∏–Ω–∏–º–∞–µ—Ç slug_url
    print(f"\n{'='*60}")
    print(f"üß™ –¢–ï–°–¢ 2: API endpoint –ø—Ä–∏–Ω–∏–º–∞–µ—Ç slug_url")
    print(f"{'='*60}")
    
    api_results = []
    for slug_url in slug_urls:
        result = test_api_with_slug_url(slug_url)
        api_results.append(result)
    
    # –¢–µ—Å—Ç 3: WEB —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
    print(f"\n{'='*60}")
    print(f"üß™ –¢–ï–°–¢ 3: WEB —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Å /ru/manga/")
    print(f"{'='*60}\n")
    
    web_results = []
    for slug_url in slug_urls:
        result = test_web_with_slug_url(slug_url)
        web_results.append(result)
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print(f"\n{'='*60}")
    print(f"üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print(f"{'='*60}\n")
    
    api_success = sum(api_results)
    web_success = sum(web_results)
    
    print(f"‚úÖ API endpoint: {api_success}/{len(api_results)} —É—Å–ø–µ—à–Ω–æ")
    print(f"‚úÖ WEB —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {web_success}/{len(web_results)} –¥–æ—Å—Ç—É–ø–Ω—ã")
    
    if api_success == len(api_results):
        print(f"\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print(f"\nüí° –ò–∑–º–µ–Ω–µ–Ω–∏—è:")
        print(f"  1. api_server.py ‚Üí –∏—Å–ø–æ–ª—å–∑—É–µ—Ç slug_url –≤–º–µ—Å—Ç–æ slug")
        print(f"  2. main.py –ø–∞—Ä—Å–µ—Ä–∞ ‚Üí –∏–∑–≤–ª–µ–∫–∞–µ—Ç ID –∏–∑ slug_url (—Ñ–æ—Ä–º–∞—Ç: ID--slug)")
        print(f"  3. API endpoint ‚Üí —Ä–∞–±–æ—Ç–∞–µ—Ç —Å slug_url")
        print(f"\nüöÄ –ì–æ—Ç–æ–≤–æ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä!")
    else:
        print(f"\n‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã:")
        if api_success < len(api_results):
            print(f"  ‚ùå API endpoint –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ slug_url")
        if web_success < len(web_results):
            print(f"  ‚ùå WEB —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
